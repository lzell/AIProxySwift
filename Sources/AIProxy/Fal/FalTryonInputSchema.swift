//
//  FalTryonInputSchema.swift
//  AIProxy
//
//  Created by Lou Zell on 12/31/24.
//

import Foundation

/// Controls for generating try-on images. Docstrings from:
/// https://fal.ai/models/fashn/tryon/api#schema-input
public struct FalTryonInputSchema: Encodable {
    // Required

    /// Category of the garment to try-on.
    public let category: Category

    /// URL or base64 of the garment image.
    public let garmentImage: URL

    /// URL or base64 of the model image.
    public let modelImage: URL

    // Optional

    /// Allow to change the appearance of the model’s hands. Example use-cases: Remove gloves,
    /// get hands out of pockets, long sleeves that should cover hands.
    public let adjustHands: Bool?

    /// Allows long garments to cover the feet/shoes or change their appearance.
    public let coverFeet: Bool?


    /// Higher guidance scales can help with preserving garment detail, but risks oversaturated
    /// colors.
    ///
    /// Default value: 2.
    public let guidanceScale: Float?


    /// Specifies the type of garment photo to optimize internal parameters for better
    /// performance. 'model' is for photos of garments on a model, 'flat-lay' is for flat-lay
    /// or ghost mannequin images, and 'auto' attempts to automatically detect the photo type.
    ///
    /// Default value: "auto". Possible values: auto, model, flat-lay.
    public let garmentPhotoType: GarmentPhotoType?

    /// Adjusts internal parameters for better performance on long tops such as: Longline
    /// shirts, tunics, coats, etc.
    public let longTop: Bool?

    /// Number of images to generate in a single run.
    ///
    /// Default value: 1.
    public let numSamples: Int?

    /// Runs NSFW content filter on inputs. Default value: true.
    public let nsfwFilter: Bool?

    /// Apply additional steps to preserve the appearance of clothes that weren’t swapped
    /// (e.g., keep pants if trying-on top).
    public let restoreClothes: Bool?

    /// Apply additional steps to preserve the original background. Runtime will be slower. Not
    /// needed for simple backgrounds.
    public let restoreBackground: Bool?

    /// Sets random operations to a fixed state. Use the same seed to reproduce results with
    /// the same inputs, or different seed to force different results.
    ///
    /// Default value: 42.
    public let seed: Int?

    /// Determines how many steps the diffusion model will take to generate the image. For
    /// simple try-ons, steps can be reduced for faster runtime.
    ///
    /// Default value: 50.
    public let timesteps: Int?

    private enum CodingKeys: String, CodingKey {
        case adjustHands = "adjust_hands"
        case coverFeet = "cover_feet"
        case category
        case guidanceScale = "guidance_scale"
        case garmentImage = "garment_image"
        case garmentPhotoType = "garment_photo_type"
        case longTop = "long_top"
        case modelImage = "model_image"
        case numSamples = "num_samples"
        case nsfwFilter = "nsfw_filter"
        case restoreClothes = "restore_clothes"
        case restoreBackground = "restore_background"
        case seed
        case timesteps
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(
        category: FalTryonInputSchema.Category,
        garmentImage: URL,
        modelImage: URL,
        adjustHands: Bool? = nil,
        coverFeet: Bool? = nil,
        guidanceScale: Float? = nil,
        garmentPhotoType: FalTryonInputSchema.GarmentPhotoType? = nil,
        longTop: Bool? = nil,
        numSamples: Int? = nil,
        nsfwFilter: Bool? = nil,
        restoreClothes: Bool? = nil,
        restoreBackground: Bool? = nil,
        seed: Int? = nil,
        timesteps: Int? = nil
    ) {
        self.category = category
        self.garmentImage = garmentImage
        self.modelImage = modelImage
        self.adjustHands = adjustHands
        self.coverFeet = coverFeet
        self.guidanceScale = guidanceScale
        self.garmentPhotoType = garmentPhotoType
        self.longTop = longTop
        self.numSamples = numSamples
        self.nsfwFilter = nsfwFilter
        self.restoreClothes = restoreClothes
        self.restoreBackground = restoreBackground
        self.seed = seed
        self.timesteps = timesteps
    }
}

// MARK: - InputSchema.Category
extension FalTryonInputSchema {
    public enum Category: String, Encodable {
        case tops
        case bottoms
        case onePieces = "one-pieces"
    }
}

// MARK: - InputSchema.GarmentPhotoType
extension FalTryonInputSchema {
    public enum GarmentPhotoType: String, Encodable {
        case auto
        case model
        case flatLay = "flat-lay"
    }
}
