//
//  FalFluxSchnellInputSchema.swift
//
//
//  Created by Hunor ZoltÃ¡ni on 01.03.2025.
//

import Foundation

/// Docstrings taken from the tooltips here: https://fal.ai/models/fal-ai/flux/schnell
public struct FalFluxSchnellInputSchema: Encodable {
    // Required

    /// The prompt to generate an image from.
    public let prompt: String

    // Optional

    /// If set to true, the safety checker will be enabled. Default value: true
    public let enableSafetyChecker: Bool?

    /// The size of the generated image.
    /// Default value: `.landscape4x3`
    public let imageSize: ImageSize?

    /// The number of images to generate.
    /// Default value: `1`
    public let numImages: Int?

    /// The number of inference steps to perform.
    /// Default value: `4`
    public let numInferenceSteps: Int?

    /// The same seed and the same prompt given to the same version of the model will output the same image every time.
    public let seed: Int?

    /// If set to true, the function will wait for the image to be generated and uploaded
    /// before returning the response. This will increase the latency of the function but it
    /// allows you to get the image directly in the response without going through the CDN.
    public let syncMode: Bool?

    private enum CodingKeys: String, CodingKey {
        case enableSafetyChecker = "enable_safety_checker"
        case imageSize = "image_size"
        case numImages = "num_images"
        case numInferenceSteps = "num_inference_steps"
        case prompt
        case seed
        case syncMode = "sync_mode"
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(
        prompt: String,
        enableSafetyChecker: Bool? = nil,
        imageSize: FalFluxSchnellInputSchema.ImageSize? = nil,
        numImages: Int? = nil,
        numInferenceSteps: Int? = nil,
        seed: Int? = nil,
        syncMode: Bool? = nil
    ) {
        self.prompt = prompt
        self.enableSafetyChecker = enableSafetyChecker
        self.imageSize = imageSize
        self.numImages = numImages
        self.numInferenceSteps = numInferenceSteps
        self.seed = seed
        self.syncMode = syncMode
    }

}

// MARK: - InputSchema.ImageSize
extension FalFluxSchnellInputSchema {
    public enum ImageSize: String, Encodable {
        case landscape16x9 = "landscape_16_9"
        case landscape4x3 = "landscape_4_3"
        case portrait16x9 = "portrait_16_9"
        case portrait4x3 = "portrait_4_3"
        case square
        case squareHD = "square_hd"
    }
}
