//
//  ElevenLabsSTSRequestBody.swift
//  AIProxy
//
//  Created by Lou Zell on 1/6/25.
//

import Foundation

/// Request body for a text-to-speech request to ElevenLabs.
/// https://elevenlabs.io/docs/api-reference/speech-to-speech/convert
/// Note that `voiceID` is set on the path, not in the request body.
public struct ElevenLabsSpeechToSpeechRequestBody: MultipartFormEncodable {

    // Required

    /// The audio file data to convert
    public let audio: Data

    // Optional

    /// Identifier of the model that will be used, you can query them using GET /v1/models.
    /// The model needs to have support for speech to speech, you can check this using the `can_do_voice_conversion` property.
    /// Defaults to `eleven_english_sts_v2`
    public let modelID: String?

    /// If set will remove the background noise from your audio input using our audio isolation
    /// model. Only applies to Voice Changer.
    public let removeBackgroundNoise: Bool?

    /// If specified, our system will make a best effort to sample deterministically, such that
    /// repeated requests with the same seed and parameters should return the same result.
    /// Determinism is not guaranteed. Must be integer between 0 and 4294967295.
    public let seed: Int?

    public var formFields: [FormField] {
        return [
            .fileField(name: "audio", content: self.audio, contentType: "audio/mpeg", filename: "aiproxy.m4a"),
            self.modelID.flatMap { .textField(name: "model_id", content: $0) },
            self.removeBackgroundNoise.flatMap { .textField(name: "remove_background_noise", content: String($0)) },
            self.seed.flatMap { .textField(name: "seed", content: String($0)) }
        ].compactMap { $0 }
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(audio: Data, modelID: String? = nil, removeBackgroundNoise: Bool? = nil, seed: Int? = nil) {
        self.audio = audio
        self.modelID = modelID
        self.removeBackgroundNoise = removeBackgroundNoise
        self.seed = seed
    }
}
