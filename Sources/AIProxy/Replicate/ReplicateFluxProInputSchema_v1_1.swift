//
//  ReplicateFluxProInputSchemaV1_1.swift
//
//
//  Created by Lou Zell on 10/3/24.
//

import Foundation

/// Input schema for use with requests to Black Forest Lab's Pro model:
/// https://replicate.com/black-forest-labs/flux-1.1-pro/api/schema
nonisolated public struct ReplicateFluxProInputSchema_v1_1: Encodable, Sendable {
    // Required

    /// Text prompt for image generation
    public let prompt: String

    // Optional

    /// Aspect ratio for the generated image.
    ///
    /// Valid choices: "1:1", "16:9", "2:3", "3:2", "4:5", "5:4", "9:16", "3:4", "4:3"
    /// Default "1:1"
    public let aspectRatio: String?

    /// Height of the generated image in text-to-image mode. Only used when
    /// aspect_ratio=custom. Must be a multiple of 16 (if it's not, it will be rounded to
    /// nearest multiple of 16). Note: Ignored in img2img and inpainting modes.
    ///
    /// Minimum 256
    /// Maximum 1440
    public let height: Int?

    /// Format of the output images.
    /// Default `.webp``
    public let outputFormat: OutputFormat?

    /// Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.
    /// Not relevant for .png outputs
    ///
    /// Default 80
    /// Maximum 100
    public let outputQuality: Int?

    /// Automatically modify the prompt for more creative generation
    ///
    /// Defaults to false
    public let promptUpsampling: Bool?

    /// Safety tolerance, 1 is most strict and 5 is most permissive
    ///
    /// Default 2
    /// Minimum 1
    /// Maximum 5
    public let safetyTolerance: Int?

    /// Random seed. Set for reproducible generation
    public let seed: Int?

    /// Width of the generated image in text-to-image mode. Only used when aspect_ratio=custom.
    /// Must be a multiple of 16 (if it's not, it will be rounded to nearest multiple of 16).
    /// Note: Ignored in img2img and inpainting modes.
    ///
    /// Minimum 256
    /// Maximum 1440
    public let width: Int?

    private enum CodingKeys: String, CodingKey {
        case aspectRatio = "aspect_ratio"
        case height
        case outputFormat = "output_format"
        case outputQuality = "output_quality"
        case prompt
        case promptUpsampling = "prompt_upsampling"
        case safetyTolerance = "safety_tolerance"
        case seed
        case width
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(
        prompt: String,
        aspectRatio: String? = nil,
        height: Int? = nil,
        outputFormat: OutputFormat? = nil,
        outputQuality: Int? = nil,
        promptUpsampling: Bool? = nil,
        safetyTolerance: Int? = nil,
        seed: Int? = nil,
        width: Int? = nil
    ) {
        self.prompt = prompt
        self.aspectRatio = aspectRatio
        self.height = height
        self.outputFormat = outputFormat
        self.outputQuality = outputQuality
        self.promptUpsampling = promptUpsampling
        self.safetyTolerance = safetyTolerance
        self.seed = seed
        self.width = width
    }
}

// MARK: - InputSchema.OutputFormat
extension ReplicateFluxProInputSchema_v1_1 {
    nonisolated public enum OutputFormat: String, Encodable, Sendable {
        case jpg
        case png
        case webp
    }
}
