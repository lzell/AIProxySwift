//
//  ReplicateFluxProInputSchema.swift
//
//  Created by Lou Zell on 8/29/24.
//

import Foundation

/// Input schema for use with requests to Black Forest Lab's Pro model:
/// https://replicate.com/black-forest-labs/flux-pro/api/schema#input-schema
nonisolated public struct ReplicateFluxProInputSchema: Encodable, Sendable {

    /// Text prompt for image generation.
    public let prompt: String

    // Optional

    /// Aspect ratio for the generated image.
    /// Valid selections are `1:1`, `16:9`, `2:3`, `3:2`, `4:5`, `5:4`, `9:16`
    ///
    /// Defaults to `1:1`
    public let aspectRatio: String?

    /// Controls the balance between adherence to the text prompt and image quality/diversity.
    /// Higher values make the output more closely match the prompt but may reduce overall
    /// image quality. Lower values allow for more creative freedom but might produce results
    /// less relevant to the prompt.
    ///
    /// Defaults to 3; acceptable range is 2 to 5.
    public let guidance: Double?

    /// Interval is a setting that increases the variance in possible outputs letting the model
    /// be a tad more dynamic in what outputs it may produce in terms of composition, color,
    /// detail, and prompt interpretation. Setting this value low will ensure strong prompt
    /// following with more consistent outputs, setting it higher will produce more dynamic or
    /// varied outputs.
    ///
    /// Defaults to 2; acceptable range is 1 to 4.
    public let interval: Double?

    /// Format of the output images
    ///
    /// Defaults to `.webp`
    public let outputFormat: OutputFormat?

    /// Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest
    /// quality. Not relevant for .png outputs.
    ///
    /// Defaults to 80; acceptable range is 0 to 100.
    public let outputQuality: Int?

    /// Safety tolerance, 1 is most strict and 5 is most permissive.
    ///
    /// Defaults to 2; acceptable range is 1 to 5.
    public let safetyTolerance: Int = 2  // default 2, max 5, min 1

    /// Random seed. Set for reproducible generation
    public let seed: Int?

    /// Number of diffusion steps.
    ///
    /// Defaults to 25; acceptable range is 1 to 50
    public let steps: Int?

    private enum CodingKeys: String, CodingKey {
        case aspectRatio = "aspect_ratio"
        case guidance
        case interval
        case outputFormat = "output_format"
        case outputQuality = "output_quality"
        case prompt
        case safetyTolerance = "safety_tolerance"
        case seed
        case steps
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(
        prompt: String,
        aspectRatio: String? = nil,
        guidance: Double? = nil,
        interval: Double? = nil,
        outputFormat: ReplicateFluxProInputSchema.OutputFormat? = nil,
        outputQuality: Int? = nil,
        seed: Int? = nil,
        steps: Int? = nil
    ) {
        self.prompt = prompt
        self.aspectRatio = aspectRatio
        self.guidance = guidance
        self.interval = interval
        self.outputFormat = outputFormat
        self.outputQuality = outputQuality
        self.seed = seed
        self.steps = steps
    }
}

extension ReplicateFluxProInputSchema {
    nonisolated public enum OutputFormat: String, Encodable, Sendable {
        case jpg
        case png
        case webp
    }
}
