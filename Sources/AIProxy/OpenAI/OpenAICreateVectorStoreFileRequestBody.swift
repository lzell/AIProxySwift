//
//  OpenAICreateVectorStoreFileRequestBody.swift
//  AIProxy
//
//  Created by Lou Zell on 7/7/25.
//

/// https://platform.openai.com/docs/api-reference/vector-stores-files/createFile
public struct OpenAICreateVectorStoreFileRequestBody: Encodable {

    // Required

    /// A File ID that the vector store should use. Useful for tools like `file_search` that can access files.
    public let fileID: String

    // Optional

    /// The chunking strategy used to chunk the file(s). If not set, will use the `auto` strategy.
    /// Only applicable if `file_ids` is non-empty.
    public let chunkingStrategy: OpenAIVectorStoreChunkingStrategy?

    /// Set of 16 key-value pairs that can be attached to an object.
    /// This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard.
    /// Keys are strings with a maximum length of 64 characters.
    /// Values are strings with a maximum length of 512 characters.
    public let metadata: [String: String]?

    private enum CodingKeys: String, CodingKey {
        case fileID = "file_id"
        case chunkingStrategy = "chunking_strategy"
        case metadata
    }

    // This memberwise initializer is autogenerated.
    // To regenerate, use `cmd-shift-a` > Generate Memberwise Initializer
    // To format, place the cursor in the initializer's parameter list and use `ctrl-m`
    public init(
        fileID: String,
        chunkingStrategy: OpenAIVectorStoreChunkingStrategy? = nil,
        metadata: [String : String]? = nil
    ) {
        self.fileID = fileID
        self.chunkingStrategy = chunkingStrategy
        self.metadata = metadata
    }
}
